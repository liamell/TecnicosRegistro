@page "/Tecnico/Delete/{TecnicoId:int}"
@using RegistroTecnicos.Models
@using RegistroTecnicos.Services
@inject TecnicoService tecnicoService
@inject NavigationManager navigationmanager
@rendermode InteractiveServer

<PageTitle> Eliminar T&eacute;cnico</PageTitle>
<div class="container">
	<div class="shadow-lg">
		@*Header*@
		<div class="card-header text-center">
			<h3><strong>Eliminar T&eacute;cnico</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			<div class="text-center">
				<h4><strong>Desea eliminar este T&eacute;cnico?</strong></h4>
			</div>
			<ul class="mt-5">
				<li><strong>Id:</strong>@Tecnico.TecnicoId</li>
				<li><strong>Nombre:</strong>@Tecnico.Nombres</li>
				<li><strong>SAueldoHora:</strong>@Tecnico.SueldoHora</li>

			</ul>
		</div>
		@*Footer*@
		<div class="card-footer text-center">
			<button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
			<button Type="button" Class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
		</div>
	</div>
</div>





@code {

	[Parameter]

	public int TecnicoId { get; set; }
	public Tecnicos Tecnico { get; set; } = new Tecnicos();
	public string Mensaje { get; set; } = string.Empty;


	protected override async Task OnInitializedAsync()
	{
		Tecnico = await tecnicoService.BuscarId(TecnicoId);
	}

	private async Task Eliminar()
	{
		var eliminado = await tecnicoService.Eliminar(Tecnico);

		if (eliminado)
			Mensaje = "El T&eacute;cnico ha sido eliminado correctamente";
		else

			Mensaje = "No se ha podido eliminar el T&eacute;cnico";

	}

	public void Volver()
	{
		navigationmanager.NavigateTo("/Tecnico/Index");
	}

	



}
