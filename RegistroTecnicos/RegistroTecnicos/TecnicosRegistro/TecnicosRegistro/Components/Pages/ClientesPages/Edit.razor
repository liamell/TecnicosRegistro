@page "/Clientes/Edit/{ClienteId:int}"
@using TecnicosRegistro.Models
@using TecnicosRegistro.Service
@inject ClientesService clientesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Modificar Clientes</PageTitle>
<EditForm Model="Clientes" OnValidSubmit="Modificar">
	<DataAnnotationsValidator />
	@*Formulario*@
	<div class="container">
		<div class="shadow-lg">
			@*Header*@
			<div class="card-header text-center">
				<h3><strong>Editar Clientes</strong></h3>

			</div>
			@*Body*@
			<div class="card-body">
				<div class="row">
					@*id*@
					<div class="col-1">
						<label class="form-label"><strong>ClienteId</strong></label>
						<InputNumber class="form-control" @bind-Value="Clientes.ClienteId" readonly></InputNumber>
					</div>

					@*Nombre*@
					<div class="col-3 ms-5">
						<label class="form-label"><strong>Nombre</strong></label>
						<InputText class="form-control" @bind-Value="Clientes.Nombres"></InputText>
						<ValidationMessage For="(()=> Clientes.Nombres)" />


					</div>

					@*WhatssAPP*@
					<div class="col-3 ms-5">
						<label class="form-label"><strong>WhatssApp</strong></label>
						<InputText class="form-control" @bind-Value="Clientes.WhatssApp"></InputText>
						<ValidationMessage For="(()=> Clientes.WhatssApp)" />


					</div>



				</div>
				@*footer*@
				<div class="card-footer text-center">
					<button Type="button" Class="btn btn-primary" @onclick="Volver">Volver</button>
					<button Type="submit" Class="btn btn-success">Modificar</button>
				</div>


			</div>


		</div>



	</div>
</EditForm>



@code {
	
		[Parameter]
		public int ClienteId { get; set; }
		public Clientes Clientes { get; set; } = new Clientes();
		public string Mensaje { get; set; } = string.Empty;

		protected override async Task OnInitializedAsync()
		{
			Clientes = await clientesService.BuscarId(ClienteId);

		}

		public async Task Modificar()
		{
			if (await Validar())
			{
				Mensaje = "Ya esxiste un tecnico con este nombre";
				return;
			}

			var Modificar = await clientesService.Guardar(Clientes);

			if (Modificar)
				Mensaje = "Se ha modificado correctamente el T&eacute;cnico";

			else
				Mensaje = "No se ha Modificado correctamente";
		}

		private async Task<bool> Validar()
		{
			var existe = await clientesService.ExisteCliente(Clientes.ClienteId, Clientes.Nombres);
			return existe;
		}

		public void Volver()
		{
			navigationManager.NavigateTo("/Clientes/Index");
		}




}
