@page "/Clientes/Create"
@using TecnicosRegistro.Models
@using TecnicosRegistro.Service
@inject ClientesService clientesService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Crear Cliente</PageTitle>
<EditForm Model="Clientes" OnValidSubmit="Guardar">
	<DataAnnotationsValidator />
	<div class="card">
		<div class="shadow-lg">
			@*Header*@
			<div class="card-header text-center">
				<div class="bg-secondary rounded text-white">
					<h3><strong>Crear Clientes</strong></h3>
				</div>
			</div>
			@*Body*@
			<div class="card-body">
				<div class="row">
					@*Id*@
					<div class="col-2">
						<label class="form-label" for="id"><strong>TipoId</strong></label>
						<InputNumber class="form-control" id="id" @bind-Value="Clientes.ClienteId" readonly></InputNumber>
					</div>

                    @*Fecha*@
                    <div class="mb-3">
                        <label class="form-label"><strong>Fecha</strong></label>
                        <InputDate class="form-control" @bind-Value="Clientes.Fecha"></InputDate>
                    </div>
                    
                    @*Nombre*@
                    <div class="col-3 ms-5">
                        <label class="form-label"><strong>Nombre</strong></label>
                        <InputText class="form-control" @bind-Value="Clientes.Nombres"></InputText>
                        <ValidationMessage For="(()=> Clientes.Nombres)" />
                    </div>
                    @*Whatssapp*@
                    <div class="col-3 ms-5">
                        <label class="form-label"><strong>WhatsApp</strong></label>
                        <InputText class="form-control" @bind-Value="Clientes.WhatssApp"></InputText>

                    </div>
	
				</div>
			</div>
			@*Footer*@
			<div class="card-footer">
				<div class="text-center">
					<button type="button" class="btn btn-outline-secondary bi bi-arrow-90deg-left" @onclick="()=>Volver()"> Volver</button>
					<button type="submit" class="btn btn-outline-success bi bi-floppy"> Crear</button>
				</div>
			</div>
		</div>
	</div>
</EditForm>









@code {
    public Clientes Clientes { get; set; } = new Clientes();
    public string Mensaje { get; set; } = string.Empty;

    public async Task Guardar()
    {
        if (await Validar())
        {
            Mensaje = "Ya existe un cliente con este nombre";
            return;
        }

        var crear = await clientesService.Guardar(Clientes);

        if (crear)
            Mensaje = "Se ha creado correctamente el Cliente";
        else
            Mensaje = "No se ha creado correctamente";
    }

    private async Task<bool> Validar()
    {
        var existe = await clientesService.ExisteCliente(Clientes.ClienteId, Clientes.Nombres);
        return existe;
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Clientes/Index");
    }
}