@using TecnicosRegistro.Models



<div>
    <h3>Seleccionar Artículo</h3>
    <InputSelect @bind-Value="ArticuloId" @onchange="ActualizarPrecio">
        <option disabled value="0">Seleccione un artículo</option>
        @foreach (var articulo in ListaArticulos)
        {
            <option value="@articulo.ArticuloId">@articulo.Descripcion -- $@articulo.Precio</option>
        }
    </InputSelect>

    <label class="col-form-label">Cantidad</label>
    <InputNumber @bind-Value="Cantidad" />

    <label class="col-form-label">Precio</label>
    <InputNumber @bind-Value="Precio" readonly />

    <button type="button" class="btn btn-success bi bi-plus-square" @onclick="ElegirArticulo"></button>

    @if (!string.IsNullOrEmpty(Mensaje))
    {
        <div class="alert alert-danger">@Mensaje</div>
    }
</div>

@code {
    [Parameter]
    public List<Articulo> ListaArticulos { get; set; } = new List<Articulo>();

    [Parameter]
    public EventCallback<(Articulo articulo, int Cantidad)> ArticuloSeleccionado { get; set; }

    public int ArticuloId { get; set; } = 0;
    public int Cantidad { get; set; } = 1;
    public double Precio { get; set; } = 0.0;
    public string Mensaje { get; set; } = string.Empty;

    private void ActualizarPrecio()
    {
        var articuloSeleccionado = ListaArticulos.FirstOrDefault(a => a.ArticuloId == ArticuloId);
        Precio = (articuloSeleccionado != null && Cantidad > 0) ? (double)(articuloSeleccionado.Precio * Cantidad) : 0;
        
    }

    private async Task ElegirArticulo()
    {
        if (ArticuloId > 0)
        {
            Mensaje = string.Empty;
            // Lógica adicional para manejar la selección del artículo.
        }
        else
        {
            Mensaje = "Debe seleccionar un articulo y especificar su cantidad";
        }
    }
}
﻿