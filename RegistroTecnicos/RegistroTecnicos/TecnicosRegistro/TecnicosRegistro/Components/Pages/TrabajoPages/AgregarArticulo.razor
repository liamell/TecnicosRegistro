@using TecnicosRegistro.Models

﻿<div class="col-auto input-group align-items-center">
    <InputSelect class="form-select" @bind-Value="ArticuloId">

        <option disabled value="0">Seleccione un articulo</option>
        @foreach (var articulo in ListaArticulo)
        {
            <option value="@articulo.ArticuloId">@articulo.Descripcion -- $ @articulo.Precio</option>
        }

    </InputSelect>
    @*Cantidad*@
    <label class="col-form-label input-group-text">Cantidad</label>
    <InputNumber class="form-control" @bind-Value="Cantidad"></InputNumber>
    @*Precio*@
    <label class="col-form-label input-group-text">Precio</label>
    <InputNumber class="form-control" @bind-Value="Precio" readonly></InputNumber>
    <button type="button" class="btn btn-success bi bi-plus-square" @onclick="ElegirArticulo"></button>
</div>
@if (!string.IsNullOrEmpty(Mensaje))
{
    <div class="alert alert-danger">@Mensaje</div>
}

@code {
    [Parameter]
    public List<Articulo> ListaArticulo { get; set; } = [];

    [Parameter]
    public int ArticuloId { get; set; }

    [Parameter]
    public int Cantidad { get; set; }

    [Parameter]
    public double Precio { get; set; }

    [Parameter]
    public EventCallback<(Articulo articulo, int Cantidad)> ArticuloSeleccionado { get; set; }

    public string? Mensaje { get; set; } = string.Empty;


    private void ActualizarPrecio()
    {
        
        var articuloSeleccionado = ListaArticulo.FirstOrDefault(a => a.ArticuloId == ArticuloId);

        if (articuloSeleccionado != null && Cantidad > 0)
        {
           
            Precio = (double)articuloSeleccionado.Precio * Cantidad;
        }
        else
        {
            Precio = 0; 
        }
    }

    private async Task ElegirArticulo()
    {
        if (ArticuloId > 0)
        {
            Mensaje = string.Empty;
            var ArticuloElegido = ListaArticulo.Single(a => a.ArticuloId == ArticuloId);
            if (ArticuloElegido.Existencia < Cantidad)
            {
                Mensaje = "La cantidad que solicita es mayor a la existente";
                return;
            }
            await ArticuloSeleccionado.InvokeAsync((ArticuloElegido, Cantidad));
        }
        else
        {
            Mensaje = "Debe seleccionar un articulo y especificar su cantidad";
        }
    }
}