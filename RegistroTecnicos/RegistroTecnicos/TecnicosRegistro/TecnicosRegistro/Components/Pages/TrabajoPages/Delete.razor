@page "/Trabajo/Delete/{TrabajoId:int}"
@using TecnicosRegistro.Models
@using TecnicosRegistro.Service
@inject TrabajoService trabajoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


<PageTitle>Eliminar Trabajo</PageTitle>
<div class="container">
	<div class="shadow-lg">
		@*Header*@
		<div class="card-header text-center">
			<h3><strong>Eliminar Trabajo</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			<div class="text-center">
				<h4><strong>¿Desea eliminar este trabajo?</strong></h4>
			</div>
			<ul class="mt-5">
				<li><strong>Id:</strong>@Trabajo.TrabajoId</li>
				<li><strong>Fecha:</strong>@Trabajo.Fecha.ToString("yyyy-MM-dd")</li>
				<li><strong>ClienteId:</strong>@Trabajo.ClienteId</li>
				<li><strong>TecnicoId:</strong>@Trabajo.TecnicoId</li>
				<li><strong>Descripción:</strong>@Trabajo.Descripcion</li>
				<li><strong>Monto:</strong>@Trabajo.Monto</li>
			</ul>
		</div>
		@*Footer*@
		<div class="card-footer text-center">
			<button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
			<button Type="button" Class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
		</div>
	</div>
</div>



@code {

	[Parameter]
	public int TrabajoId { get; set; }
	public Trabajo Trabajo { get; set; } = new Trabajo();
	public string Mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Trabajo = await trabajoService.BuscarId(TrabajoId);
	}

	private async Task Eliminar()
	{
		var eliminado = await trabajoService.Eliminar(Trabajo);

		if (eliminado)
			Mensaje = "El trabajo ha sido eliminado correctamente";
		else
			Mensaje = "No se ha podido eliminar el trabajo";
	}

	public void Volver()
	{
		navigationManager.NavigateTo("/Trabajo/Index");
	}
}
