@page "/Trabajo/Edit/{TrabajoId:int}"
@using TecnicosRegistro.Models
@using TecnicosRegistro.Service
@inject TrabajoService trabajoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


<PageTitle>Modificar Trabajo</PageTitle>
<EditForm Model="Trabajo" OnValidSubmit="Modificar">
	<DataAnnotationsValidator />
	@*Formulario*@
	<div class="container">
		<div class="shadow-lg">
			@*Header*@
			<div class="card-header text-center">
				<h3><strong>Editar Trabajo</strong></h3>
			</div>

			@*Body*@
			<div class="card-body">
				<div class="row">
					@*TrabajoId*@
					<div class="col-2">
						<label class="form-label"><strong>TrabajoId</strong></label>
						<InputNumber class="form-control" @bind-Value="Trabajo.TrabajoId" readonly></InputNumber>
					</div>

					@*Fecha*@
					<div class="col-3 ms-3">
						<label class="form-label"><strong>Fecha</strong></label>
						<InputDate class="form-control" @bind-Value="Trabajo.Fecha"></InputDate>
						<ValidationMessage For="(() => Trabajo.Fecha)" />
					</div>

					@*ClienteId*@
					<div class="col-2 ms-3">
						<label class="form-label"><strong>ClienteId</strong></label>
						<InputNumber class="form-control" @bind-Value="Trabajo.ClienteId"></InputNumber>
						<ValidationMessage For="(() => Trabajo.ClienteId)" />
					</div>

					@*TecnicoId*@
					<div class="col-2 ms-3">
						<label class="form-label"><strong>TecnicoId</strong></label>
						<InputNumber class="form-control" @bind-Value="Trabajo.TecnicoId"></InputNumber>
						<ValidationMessage For="(() => Trabajo.TecnicoId)" />
					</div>
				</div>

				<div class="row mt-3">
					@*Descripción*@
					<div class="col-6">
						<label class="form-label"><strong>Descripción</strong></label>
						<InputTextArea class="form-control" @bind-Value="Trabajo.Descripcion"></InputTextArea>
						<ValidationMessage For="(() => Trabajo.Descripcion)" />
					</div>

					@*Monto*@
					<div class="col-3 ms-5">
						<label class="form-label"><strong>Monto</strong></label>
						<InputNumber class="form-control" @bind-Value="Trabajo.Monto"></InputNumber>
						<ValidationMessage For="(() => Trabajo.Monto)" />
					</div>
				</div>

				@*Footer*@
				<div class="card-footer text-center">
					<button Type="button" Class="btn btn-primary" @onclick="Volver">Volver</button>
					<button Type="submit" Class="btn btn-success">Modificar</button>
				</div>
			</div>
		</div>
	</div>
</EditForm>


@code {
	[Parameter]
	public int TrabajoId { get; set; }
	public Trabajo Trabajo { get; set; } = new Trabajo();
	public string Mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Trabajo = await trabajoService.BuscarId(TrabajoId);
	}

	public async Task Modificar()
	{

		var modificar = await trabajoService.Guardar(Trabajo);

		if (modificar)
			Mensaje = "Se ha modificado correctamente el Trabajo";
		else
			Mensaje = "No se ha modificado correctamente";
	}

	public void Volver()
	{
		navigationManager.NavigateTo("/Trabajo/Index");
	}
}

