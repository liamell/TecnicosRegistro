@page "/Trabajo/Create"
@using TecnicosRegistro.Models
@using TecnicosRegistro.Service
@using TecnicosRegistro.Services
@inject TrabajoService trabajoService
@inject TecnicoService tecnicoService
@inject ClientesService clienteService
@inject PrioridadService prioridadService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


@*html*@

<PageTitle>Create</PageTitle>
<EditForm Model="Trabajo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @*Formulario*@
    <div class="container">
        <div class="shadow-lg">

            @*Header*@
            <div class="card-header">
                <h3>Crear Trabajo</h3>
            </div>

            @*Body*@
            <div class="card-body d-flex flex-column align-items-center justify-content-center text-lg-center">

                @*Id*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>TrabajoId</strong></label>
                    <InputNumber class="form-control"
                                 @bind-Value="Trabajo.TrabajoId" readonly></InputNumber>
                </div>

                @*Fecha*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Fecha</strong></label>
                    <InputDate class="form-control" @bind-Value="Trabajo.Fecha"></InputDate>
                </div>

                @*Cliente*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Cliente</strong></label>
                    <InputSelect class="form-select" @bind-Value="Trabajo.ClienteId">
                        <option ="" selected disabled>Elija una opci&oacute;n</option>
                        @foreach(var cliente in ListaClientes)
                        {
                            <option value="@cliente.ClienteId">@cliente.Nombres</option>
                        }
                    </InputSelect>
                </div>

                @*Tecnico*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Tecnico</strong></label>
                    <InputSelect class="form-select" @bind-Value="Trabajo.TecnicoId">
                        <option ="" selected disabled>Elija una opci&oacute;n</option>
                        @foreach(var tecnico in ListaTecnicos)
                        {
                            <option value="@tecnico.TecnicoId">@tecnico.Nombres</option>
                        }
                    </InputSelect>
                </div>

                @*Descripcion*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Descripci&oacute;n</strong></label>
                    <InputText class="form-control"
                               @bind-Value="Trabajo.Descripcion"></InputText>
                    <ValidationMessage For="(()=> Trabajo.Descripcion)" />
                </div>

                @*Prioridad*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Prioridad</strong></label>
                    <InputSelect class="form-select" @bind-Value="Trabajo.PrioridadId">
                        <option ="" selected disabled>Elija una opci&oacute;n</option>
                        @foreach(var prioridad in ListaPrioridad)
                        {
                            <option value="@prioridad.PrioridadId">@prioridad.Descripcion</option>
                        }
                    </InputSelect>
                </div>

                @*SueldoHora*@
                <div class="col-4 ms-3">
                    <label class="form-label"><strong>Monto</strong></label>
                    <InputNumber class="form-control"
                                 @bind-Value="Trabajo.Monto"></InputNumber>
                    <ValidationMessage For="(()=> Trabajo.Monto)" />
                </div>
                
            </div>
            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary bi bi-arrow-90deg-left" @onclick="Volver"></button>
                <button type="submit" class="btn btn-success">Siguiente</button>

            </div>
        </div>
    </div>
</EditForm>
@Mensaje

@code {
    public Trabajo Trabajo { get; set; } = new Trabajo();

    public string Mensaje { get; set; } = string.Empty;

    public List<Clientes> ListaClientes { get; set; } = new List<Clientes>();
    public List<Tecnicos> ListaTecnicos { get; set; } = new List<Tecnicos>();
    public List<Prioridad> ListaPrioridad { get; set; } = new List<Prioridad>();

    protected override async Task OnInitializedAsync()
    {
        ListaClientes = await clienteService.Listar(e => e.ClienteId > 0);
        ListaTecnicos = await tecnicoService.Listar(t => t.TecnicoId > 0);
        ListaPrioridad = await prioridadService.Listar(p => p.PrioridadId > 0);
    }

   

    private async Task<bool> Validar()
    {
        var valido = await trabajoService.ExisteTrabajo(Trabajo.TrabajoId);
        return valido;
    }

    private async Task Guardar()
    {
        if (await Validar())
        {
            Mensaje = "Ya existe un trabajo con este ID";
            return;
        }

        var crear = await trabajoService.Guardar(Trabajo);

        if (crear)
        {
            Mensaje = "Se ha creado correctamente el trabajo";
            navigationManager.NavigateTo($"/Trabajo/Detalle/{Trabajo.TrabajoId}");
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnicos/Trabajos/Index");
    }

}