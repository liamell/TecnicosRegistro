@page "/Trabajo/Index"
@using TecnicosRegistro.Models
@using TecnicosRegistro.Service
@inject TrabajoService trabajoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer


@*HTML*@
<PageTitle>Index</PageTitle>
<div class="container">
    <div class="shadow-lg">

        @*header*@
        <div class="card-header text-center">
            <h3><strong>Listado de Trabajos</strong></h3>
        </div>

        @*body*@
        <div class="card-body">

            @*labels*@
            <div class="row">

                @*Filtrar por*@
                <div class="col-3">
                    <label class="col-form-label"><strong>Filtrar por</strong></label>
                </div>

                @*ValorFiltro*@
                <div class="col-4">
                    <label class="col-form-label"><strong>B&uacute;squeda</strong></label>
                </div>
            </div>

            @*Inputs y botones*@
            <div class="row align-items-center">
                @*filtro*@
                <div class="col-3">
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Elija una opci&oacute;n</option>
                        <option value="Prioridad">Prioridad</option>
                        <option value="Descripcion">Descripcion</option>
                        <option value="Fecha">Fecha</option>

                    </InputSelect>
                </div>

                @*Busqueda*@
                <div class="col-4">
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-outline-primary bi bi-search" @onclick="Buscar"></button>
                    </div>
                </div>

                @*Restablecer*@
                <div class="col-auto">
                    <button type="button" class="btn btn-outline-secondary bi bi-arrow-clockwise" @onclick="Restablecer"></button>
                </div>


            </div>
            <table class="table table-bordered text-center mt-4">
                <thead>
                    <tr>
                        <th>TrabajoId</th>
                        <th>Fecha</th>
                        <th>ClienteId</th>
                        <th>Cliente</th>
                        <th>TecnicoId</th>
                        <th>Tecnico</th>
                        <th>Descripci&oacute;n</th>
                        <th>Prioridad</th>
                        <th>Monto</th>
                        <th>Articulos</th>
                        <th>Details</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var trabajo in ListaTrabajos)
                    {
                        <tr>
                            <td>@trabajo.TrabajoId</td>
                            <td>@trabajo.Fecha</td>

                            <td>@(trabajo.Cliente != null ? trabajo.Cliente.ClienteId.ToString() : "N/A")</td>

                            <td>@(trabajo.Cliente != null ? trabajo.Cliente.Nombres : "Sin cliente")</td>

                            <td>@(trabajo.Tecnico != null ? trabajo.Tecnico.TecnicoId.ToString() : "N/A")</td>

                            <td>@(trabajo.Tecnico != null ? trabajo.Tecnico.Nombres : "Sin técnico")</td>

                            <td>@trabajo.Descripcion</td>
                            <td>@(trabajo.Prioridad != null ? trabajo.Prioridad.Descripcion : "N/A")</td>
                            <td>@trabajo.Monto</td>

                            <td>
                                <a href="/Trabajo/Detalle/@trabajo.TrabajoId" class="btn btn-outline-danger bi bi-eye-fill"></a>
                            </td>

                            <td>
                                <a href="/Trabajo/Details/@trabajo.TrabajoId" class="btn btn-outline-primary bi bi-eye-fill"></a>
                            </td>

                            <td>
                                <a href="/Trabajo/Edit/@trabajo.TrabajoId" class="btn btn-outline-warning bi bi-pencil-square"></a>
                            </td>

                            <td>
                                <a href="/Trabajo/Delete/@trabajo.TrabajoId" class="btn btn-outline-danger bi bi-trash-fill"></a>
                            </td>

                                                  </tr>
                    }


                     
                </tbody>
            </table>
        </div>
        @*footer*@
        <div class="card-footer">
            <p><strong>Total de Trabajos: </strong>@ListaTrabajos.Count</p>
            @*Crear*@
            <div class="col-3">
                <a href="/Trabajo/Create" class="btn btn-outline-primary">Crear</a>
            </div>
        </div>
    </div>
</div>

@code {
    public List<Trabajo> ListaTrabajos { get; set; } = new List<Trabajo>();
    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaTrabajos = await trabajoService.Listar(e => e.TrabajoId > 0);
    }

    private async Task Buscar()
    {
        if (ValorFiltro.Trim() != "")
        {
            if (Filtro == "Descripcion")
            {
                ListaTrabajos = await trabajoService.Listar(e => e.Descripcion.ToLower().Contains(ValorFiltro.ToLower()));
            }
            else if (Filtro == "Fecha")
            {
                if (DateTime.TryParse(ValorFiltro, out DateTime fechaFiltro))
                {
                    ListaTrabajos = await trabajoService.Listar(e => e.Fecha.Date == fechaFiltro.Date);
                }
            }
            else if (Filtro == "Prioridad")
            {
                ListaTrabajos = await trabajoService.Listar(e => e.Prioridad.Descripcion.ToLower().Contains(ValorFiltro.ToLower()));
            }
        }
        else
            ListaTrabajos = await trabajoService.Listar(e => e.TrabajoId > 0);
    }

    private async Task Restablecer()
    {
        ListaTrabajos = await trabajoService.Listar(e => e.TrabajoId > 0);
        Filtro = string.Empty;
        ValorFiltro = string.Empty;
    }
}
