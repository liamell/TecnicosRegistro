@page "/Tecnico/Create"
@using TecnicosRegistro.Models
@using TecnicosRegistro.Service
@inject TecnicoService tecnicoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Create</PageTitle>
<EditForm Model="Tecnico" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    @*Formulario*@
    <div class="container">
        <div class="shadow-lg">
            @*Header*@
            <div class="card-header text-center">
                <h3><strong>Crear T&eacute;cnico</strong></h3>
            </div>
            @*Body*@
            <div class="card-body">
                <div class="row">
                    @*Id*@
                    <div class="col-1">
                        <label class="form-label"><strong>T&eacute;cnicoId</strong></label>
                        <InputNumber class="form-control" @bind-Value="Tecnico.TecnicoId" readonly></InputNumber>
                    </div>

                    @*Fecha*@
                    <div class="mb-3">
                        <label class="form-label"><strong>Fecha</strong></label>
                        <InputDate class="form-control" @bind-Value="Tecnico.Fecha"></InputDate>
                    </div>

                    @*Nombre*@
                    <div class="col-3 ms-5">
                        <label class="form-label"><strong>Nombre</strong></label>
                        <InputText class="form-control" @bind-Value="Tecnico.Nombres"></InputText>
                        <ValidationMessage For="(()=> Tecnico.Nombres)" />
                    </div>
                    @*Sueldo*@
                    <div class="col-3 ms-5">
                        <label class="form-label"><strong>SueldoHora</strong></label>
                        <InputNumber class="form-control" @bind-Value="Tecnico.SueldoHora"></InputNumber>

                    </div>

                </div>
            </div>
            @*Footer*@
            <div class="card-footer text-center">
                <button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-success">Guardar</button>
            </div>
        </div>
    </div>
</EditForm>
@Mensaje


@code {
    public Tecnicos Tecnico { get; set; } = new Tecnicos();
    public string Mensaje { get; set; } = string.Empty;

    public async Task Guardar()
    {

        try
        {
            if (await Validar())
            {
                Mensaje = "Ya existe un cliente con este nombre";
                return;
            }

            var crear = await tecnicoService.Guardar(Tecnico);

            Mensaje = crear ? "Se ha creado correctamente el Tecnico" : "No se ha creado correctamente";
        }
        catch (Exception ex)
        {
            Mensaje = $"Error al guardar: {ex.Message}";

            if (ex.InnerException != null)
            {
                Mensaje += $" | Detalle: {ex.InnerException.Message}";
            }
        }



    }

    private async Task<bool> Validar()
    {
        var existe = await tecnicoService.ExisteTecnico(Tecnico.TecnicoId, Tecnico.Nombres);
        return existe;
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Tecnico/Index");
    }
}