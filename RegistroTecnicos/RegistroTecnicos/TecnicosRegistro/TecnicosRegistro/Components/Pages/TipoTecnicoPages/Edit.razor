@page "/TipoTecnico/Edit/{TipoTecnicoId:int}"
@using TecnicosRegistro.Models
@using TecnicosRegistro.Service
@inject TipoTecnicoService tipotecnicoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Crear Tipo T&eacute;cnico</PageTitle>
<EditForm Model="TipoTecnico" OnValidSubmit="Modificar">
	<DataAnnotationsValidator />
	<div class="card">
		<div class="shadow-lg">
			@*Header*@
			<div class="card-header text-center">
				<div class="bg-secondary rounded text-white">
					<h3><strong>Editar tipo t&eacute;cnico</strong></h3>
				</div>
			</div>
			@*Body*@
			<div class="card-body">
				<div class="row">
					@*Id*@
					<div class="col-2">
						<label class="form-label" for="id"><strong>TipoId</strong></label>
						<InputNumber class="form-control" id="id" @bind-Value="TipoTecnico.TipoId" readonly></InputNumber>
					</div>
					@*Descripción*@
					<div class="col-5 ms-5">
						<label class="form-label" for="descripcion"><strong>Descripci&oacute;n</strong></label>
						<InputText class="form-control" id="descripcion" @bind-Value="TipoTecnico.Descripcion"></InputText>
						<ValidationMessage For="(()=> TipoTecnico.Descripcion)" />
					</div>
				</div>
			</div>
			@*Footer*@
			<div class="card-footer">
				<div class="text-center">
					<button type="button" class="btn btn-outline-secondary bi bi-arrow-90deg-left" @onclick="()=>Volver()"> Volver</button>
					<button type="submit" class="btn btn-outline-success bi bi-pencil-square"> Modificar</button>
				</div>
			</div>
		</div>
	</div>
</EditForm>





@code {

		[Parameter]
		public int TipoTecnicoId {get; set;}
		public TipoTecnico TipoTecnico { get; set; } = new TipoTecnico();
		public string Mensaje { get; set; } = string.Empty;


		protected override async Task OnInitializedAsync()
		{
			TipoTecnico = await tipotecnicoService.BuscarId(TipoTecnicoId);
		}

		public async Task Modificar()
		{
			if (await Validar())
			{
				Mensaje = "Ya esxiste un tecnico con esta descripcion";          
				return;
			}

			var Modificado = await tipotecnicoService.Guardar(TipoTecnico);

			if (Modificado)
				Mensaje = "Se ha modificado correctamente el Tipo T&eacute;cnico";

			else
				Mensaje = "No se ha Modificado correctamente";

		}

		private async Task<bool> Validar()
		{
			var existe = await tipotecnicoService.ExisteDescripcion(TipoTecnico.TipoId, TipoTecnico.Descripcion);
			return existe;
		}

		public void Volver()
		{
			navigationManager.NavigateTo("/TipoTecnico/Index");
		}
}