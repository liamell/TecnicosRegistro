@page "/Articulo/Delete/{ArticuloId:int}"
@using TecnicosRegistro.Models
@using TecnicosRegistro.Service
@inject ArticuloService articuloService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle> Eliminar Articulo</PageTitle>
<div class="container">
	<div class="shadow-lg">
		@*Header*@
		<div class="card-header text-center">
			<h3><strong>Eliminar Articulo</strong></h3>
		</div>
		@*Body*@
		<div class="card-body">
			<div class="text-center">
				<h4><strong>Desea eliminar este Articulo?</strong></h4>
			</div>
			<ul class="mt-5">
				<li><strong>Id:</strong>@Articulo.ArticuloId</li>
				<li><strong>Descripcion:</strong>@Articulo.Descripcion</li>
				<li><strong>Costo:</strong>@Articulo.Costo</li>
				<li><strong>Precio:</strong>@Articulo.Precio</li>
				<li><strong>Existencia:</strong>@Articulo.Existencia</li>


			</ul>
		</div>
		@*Footer*@
		<div class="card-footer text-center">
			<button type="button" class="btn btn-primary" @onclick="Volver">Volver</button>
			<button Type="button" Class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
		</div>
	</div>
</div>



@code {
    [Parameter]
    public int ArticuloId { get; set; }
    public Articulo Articulo { get; set; } = new Articulo();
    public string Mensaje { get; set; } = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Articulo = await articuloService.Buscar(ArticuloId);
	}


    private async Task Eliminar()
    {
        var eliminado = await articuloService.Eliminar(ArticuloId);

        if (eliminado)
            Mensaje = "El Artículo ha sido eliminado correctamente.";
        else
            Mensaje = "No se ha podido eliminar el Artículo.";
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Articulo/Index");
    }
}
